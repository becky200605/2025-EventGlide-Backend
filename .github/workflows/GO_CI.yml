name: EventGlide/build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  #  test:
  #    name: GO Code Test
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Checkout Code
  #        uses: actions/checkout@v4
  #
  #      - name: Setup Go
  #        uses: actions/setup-go@v5
  #        with:
  #          go-version: '1.24.2'
  #      - run: go version
  #
  #      - name: Go Test
  #        working-directory: ./be-answer
  #        run: go test -v ./...
  #
  #      - name: Go Build
  #        working-directory: ./be-answer
  #        run: go build ./...

  build:
    name: Be-answer Image Build And Push
    runs-on: ubuntu-latest
    #    needs:
    #      - test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}
          registry: ${{ secrets.ALIYUN_REGISTRY }}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build And Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.ALIYUN_REGISTRY }}/muxi/EventGlide:v1.0.0
          file: ./Dockerfile
          build-args:
            Project_Name=eventglide
            Port=8080

  deploy:
    name: Deploy eventglide To Server
    runs-on: ubuntu-latest
    needs:
      #      - test
      - build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_ADDR }} >> ~/.ssh/known_hosts
      - name: SSH into server and deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_ADDR }} << EOF
           docker pull ${{ secrets.ALIYUN_REGISTRY }}/muxi/EventGlide:v1.0.0
           docker image prune -f
           cd ./eg
           docker compose -f docker-compose.yml up -d
          EOF
