// Code generated by MockGen. DO NOT EDIT.
// Source: ../../internal/dao/number_dao.go

// package tests is a generated GoMock package.
package tests

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
	model "github.com/raiki02/EG/internal/model"
)

// MockNumberDaoHdl is a mock of NumberDaoHdl interface.
type MockNumberDaoHdl struct {
	ctrl     *gomock.Controller
	recorder *MockNumberDaoHdlMockRecorder
}

// MockNumberDaoHdlMockRecorder is the mock recorder for MockNumberDaoHdl.
type MockNumberDaoHdlMockRecorder struct {
	mock *MockNumberDaoHdl
}

// NewMockNumberDaoHdl creates a new mock instance.
func NewMockNumberDaoHdl(ctrl *gomock.Controller) *MockNumberDaoHdl {
	mock := &MockNumberDaoHdl{ctrl: ctrl}
	mock.recorder = &MockNumberDaoHdlMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNumberDaoHdl) EXPECT() *MockNumberDaoHdlMockRecorder {
	return m.recorder
}

// AddCommentsNum mocks base method.
func (m *MockNumberDaoHdl) AddCommentsNum(arg0 *gin.Context, arg1 *model.Number) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddCommentsNum", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddCommentsNum indicates an expected call of AddCommentsNum.
func (mr *MockNumberDaoHdlMockRecorder) AddCommentsNum(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddCommentsNum", reflect.TypeOf((*MockNumberDaoHdl)(nil).AddCommentsNum), arg0, arg1)
}

// AddLikesNum mocks base method.
func (m *MockNumberDaoHdl) AddLikesNum(arg0 *gin.Context, arg1 *model.Number) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddLikesNum", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddLikesNum indicates an expected call of AddLikesNum.
func (mr *MockNumberDaoHdlMockRecorder) AddLikesNum(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddLikesNum", reflect.TypeOf((*MockNumberDaoHdl)(nil).AddLikesNum), arg0, arg1)
}

// CutLikesNum mocks base method.
func (m *MockNumberDaoHdl) CutLikesNum(arg0 *gin.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CutLikesNum", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// CutLikesNum indicates an expected call of CutLikesNum.
func (mr *MockNumberDaoHdlMockRecorder) CutLikesNum(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CutLikesNum", reflect.TypeOf((*MockNumberDaoHdl)(nil).CutLikesNum), arg0, arg1, arg2)
}
