// Code generated by MockGen. DO NOT EDIT.
// Source: ../../internal/dao/post_dao.go

// package tests is a generated GoMock package.
package tests

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/raiki02/EG/internal/model"
)

// MockPostDaoHdl is a mock of PostDaoHdl interface.
type MockPostDaoHdl struct {
	ctrl     *gomock.Controller
	recorder *MockPostDaoHdlMockRecorder
}

// MockPostDaoHdlMockRecorder is the mock recorder for MockPostDaoHdl.
type MockPostDaoHdlMockRecorder struct {
	mock *MockPostDaoHdl
}

// NewMockPostDaoHdl creates a new mock instance.
func NewMockPostDaoHdl(ctrl *gomock.Controller) *MockPostDaoHdl {
	mock := &MockPostDaoHdl{ctrl: ctrl}
	mock.recorder = &MockPostDaoHdlMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPostDaoHdl) EXPECT() *MockPostDaoHdlMockRecorder {
	return m.recorder
}

// CreateDraft mocks base method.
func (m *MockPostDaoHdl) CreateDraft(arg0 context.Context, arg1 *model.PostDraft) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDraft", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateDraft indicates an expected call of CreateDraft.
func (mr *MockPostDaoHdlMockRecorder) CreateDraft(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDraft", reflect.TypeOf((*MockPostDaoHdl)(nil).CreateDraft), arg0, arg1)
}

// CreatePost mocks base method.
func (m *MockPostDaoHdl) CreatePost(arg0 context.Context, arg1 *model.Post) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePost", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreatePost indicates an expected call of CreatePost.
func (mr *MockPostDaoHdlMockRecorder) CreatePost(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePost", reflect.TypeOf((*MockPostDaoHdl)(nil).CreatePost), arg0, arg1)
}

// DeletePost mocks base method.
func (m *MockPostDaoHdl) DeletePost(arg0 context.Context, arg1 *model.Post) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePost", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeletePost indicates an expected call of DeletePost.
func (mr *MockPostDaoHdlMockRecorder) DeletePost(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePost", reflect.TypeOf((*MockPostDaoHdl)(nil).DeletePost), arg0, arg1)
}

// FindPostByName mocks base method.
func (m *MockPostDaoHdl) FindPostByName(arg0 context.Context, arg1 string) ([]model.Post, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindPostByName", arg0, arg1)
	ret0, _ := ret[0].([]model.Post)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindPostByName indicates an expected call of FindPostByName.
func (mr *MockPostDaoHdlMockRecorder) FindPostByName(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindPostByName", reflect.TypeOf((*MockPostDaoHdl)(nil).FindPostByName), arg0, arg1)
}

// FindPostByUser mocks base method.
func (m *MockPostDaoHdl) FindPostByUser(arg0 context.Context, arg1, arg2 string) ([]model.Post, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindPostByUser", arg0, arg1, arg2)
	ret0, _ := ret[0].([]model.Post)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindPostByUser indicates an expected call of FindPostByUser.
func (mr *MockPostDaoHdlMockRecorder) FindPostByUser(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindPostByUser", reflect.TypeOf((*MockPostDaoHdl)(nil).FindPostByUser), arg0, arg1, arg2)
}

// GetAllPost mocks base method.
func (m *MockPostDaoHdl) GetAllPost(arg0 context.Context) ([]model.Post, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllPost", arg0)
	ret0, _ := ret[0].([]model.Post)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllPost indicates an expected call of GetAllPost.
func (mr *MockPostDaoHdlMockRecorder) GetAllPost(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllPost", reflect.TypeOf((*MockPostDaoHdl)(nil).GetAllPost), arg0)
}

// LoadDraft mocks base method.
func (m *MockPostDaoHdl) LoadDraft(arg0 context.Context, arg1, arg2 string) (*model.PostDraft, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadDraft", arg0, arg1, arg2)
	ret0, _ := ret[0].(*model.PostDraft)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadDraft indicates an expected call of LoadDraft.
func (mr *MockPostDaoHdlMockRecorder) LoadDraft(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadDraft", reflect.TypeOf((*MockPostDaoHdl)(nil).LoadDraft), arg0, arg1, arg2)
}
